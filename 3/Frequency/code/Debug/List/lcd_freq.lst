
AVRASM ver. 2.1.30  C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm Sat Jan 02 22:58:39 2021

C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm(1090): warning: Register r6 already defined by the .DEF directive
C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm(1091): warning: Register r7 already defined by the .DEF directive
C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm(1093): warning: Register r9 already defined by the .DEF directive
C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm(1094): warning: Register r10 already defined by the .DEF directive
C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm(1095): warning: Register r11 already defined by the .DEF directive
C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm(1096): warning: Register r12 already defined by the .DEF directive
C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 6/000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _pos_edge=R4
                 	.DEF _pos_edge_msb=R5
                 	.DEF _neg_edge=R6
                 	.DEF _neg_edge_msb=R7
                 	.DEF _end_edge=R8
                 	.DEF _end_edge_msb=R9
                 	.DEF _period=R10
                 	.DEF _period_msb=R11
                 	.DEF _clock=R12
                 	.DEF _clock_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0044 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 7246
000034 7165
000035 6575
000036 636e      	.DB  0x46,0x72,0x65,0x71,0x75,0x65,0x6E,0x63
000037 3a79
000038 2520
000039 2064
00003a 7a48      	.DB  0x79,0x3A,0x20,0x25,0x64,0x20,0x48,0x7A
C:\Users\asus\Desktop\Frequency\code\Debug\List\lcd_freq.asm(1137): warning: .cseg .db misalignment - padding zero byte
00003b 0000      	.DB  0x0
                 _0x2000003:
00003c c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003d 0001      	.DW  0x01
00003e 0160      	.DW  _0x11
00003f 0076      	.DW  _0x0*2+16
                 
000040 0002      	.DW  0x02
000041 0179      	.DW  __base_y_G100
000042 0078      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000043 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000044 94f8      	CLI
000045 27ee      	CLR  R30
000046 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000047 e0f1      	LDI  R31,1
000048 bffb      	OUT  GICR,R31
000049 bfeb      	OUT  GICR,R30
00004a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004b e08d      	LDI  R24,(14-2)+1
00004c e0a2      	LDI  R26,2
00004d 27bb      	CLR  R27
                 __CLEAR_REG:
00004e 93ed      	ST   X+,R30
00004f 958a      	DEC  R24
000050 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000051 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000052 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000053 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000054 93ed      	ST   X+,R30
000055 9701      	SBIW R24,1
000056 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000057 e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000058 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000059 9185      	LPM  R24,Z+
00005a 9195      	LPM  R25,Z+
00005b 9700      	SBIW R24,0
00005c f061      	BREQ __GLOBAL_INI_END
00005d 91a5      	LPM  R26,Z+
00005e 91b5      	LPM  R27,Z+
00005f 9005      	LPM  R0,Z+
000060 9015      	LPM  R1,Z+
000061 01bf      	MOVW R22,R30
000062 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000063 9005      	LPM  R0,Z+
000064 920d      	ST   X+,R0
000065 9701      	SBIW R24,1
000066 f7e1      	BRNE __GLOBAL_INI_LOOP
000067 01fb      	MOVW R30,R22
000068 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000069 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006a bfed      	OUT  SPL,R30
00006b e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006e e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006f 940c 0071 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Chip type               : ATmega16
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 6/000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*******************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;// Alphanumeric LCD functions
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#define ICR1 256 * ICR1H + ICR1L
                 ;
                 ;
                 ;unsigned int pos_edge, neg_edge, end_edge;
                 ;unsigned int period, clock;
                 ;char frequency[20];
                 ;long freq;
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 001A {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 001B     lcd_init(24);
000071 e1a8      	LDI  R26,LOW(24)
000072 d0dc      	RCALL _lcd_init
                 ; 0000 001C 
                 ; 0000 001D     PORTD = 0x00;
000073 e0e0      	LDI  R30,LOW(0)
000074 bbe2      	OUT  0x12,R30
                 ; 0000 001E 
                 ; 0000 001F     while(1)
                 _0x3:
                 ; 0000 0020     {
                 ; 0000 0021         TCCR1A = 0;
000075 e0e0      	LDI  R30,LOW(0)
000076 bdef      	OUT  0x2F,R30
                 ; 0000 0022         TCNT1=0;
000077 e0e0      	LDI  R30,LOW(0)
000078 e0f0      	LDI  R31,HIGH(0)
000079 bdfd      	OUT  0x2C+1,R31
00007a bdec      	OUT  0x2C,R30
                 ; 0000 0023         TIFR = (1<<ICF1);
00007b e2e0      	LDI  R30,LOW(32)
00007c bfe8      	OUT  0x38,R30
                 ; 0000 0024 
                 ; 0000 0025         TCCR1B = 0x41;
00007d e4e1      	LDI  R30,LOW(65)
00007e bdee      	OUT  0x2E,R30
                 ; 0000 0026         while ((TIFR&(1<<ICF1)) == 0);
                 _0x6:
00007f b7e8      	IN   R30,0x38
000080 ffe5      	SBRS R30,5
000081 cffd      	RJMP _0x6
                 ; 0000 0027         pos_edge = ICR1;
000082 940e 033e 	CALL SUBOPT_0x0
000084 012f      	MOVW R4,R30
                 ; 0000 0028         TIFR = (1<<ICF1);
000085 e2e0      	LDI  R30,LOW(32)
000086 bfe8      	OUT  0x38,R30
                 ; 0000 0029 
                 ; 0000 002A         TCCR1B = 0x01;
000087 e0e1      	LDI  R30,LOW(1)
000088 bdee      	OUT  0x2E,R30
                 ; 0000 002B         while ((TIFR&(1<<ICF1)) == 0);
                 _0x9:
000089 b7e8      	IN   R30,0x38
00008a ffe5      	SBRS R30,5
00008b cffd      	RJMP _0x9
                 ; 0000 002C         neg_edge = ICR1;
00008c 940e 033e 	CALL SUBOPT_0x0
00008e 013f      	MOVW R6,R30
                 ; 0000 002D         TIFR = (1<<ICF1);
00008f e2e0      	LDI  R30,LOW(32)
000090 bfe8      	OUT  0x38,R30
                 ; 0000 002E 
                 ; 0000 002F         TCCR1B = 0x41;
000091 e4e1      	LDI  R30,LOW(65)
000092 bdee      	OUT  0x2E,R30
                 ; 0000 0030         while ((TIFR&(1<<ICF1)) == 0);
                 _0xC:
000093 b7e8      	IN   R30,0x38
000094 ffe5      	SBRS R30,5
000095 cffd      	RJMP _0xC
                 ; 0000 0031         end_edge = ICR1;
000096 940e 033e 	CALL SUBOPT_0x0
000098 014f      	MOVW R8,R30
                 ; 0000 0032         TIFR = (1<<ICF1);
000099 e2e0      	LDI  R30,LOW(32)
00009a bfe8      	OUT  0x38,R30
                 ; 0000 0033 
                 ; 0000 0034         TCCR1B = 0;
00009b e0e0      	LDI  R30,LOW(0)
00009c bdee      	OUT  0x2E,R30
                 ; 0000 0035 
                 ; 0000 0036 		if(pos_edge < end_edge)
                +
00009d 1448     +CP R4 , R8
00009e 0459     +CPC R5 , R9
                 	__CPWRR 4,5,8,9
00009f f5b0      	BRSH _0xF
                 ; 0000 0037 		{
                 ; 0000 0038 			period = neg_edge - pos_edge;
0000a0 01f3      	MOVW R30,R6
0000a1 19e4      	SUB  R30,R4
0000a2 09f5      	SBC  R31,R5
0000a3 015f      	MOVW R10,R30
                 ; 0000 0039 			freq = 6000000UL/period;
0000a4 2766      	CLR  R22
0000a5 2777      	CLR  R23
                +
0000a6 e8a0     +LDI R26 , LOW ( 0x5B8D80 )
0000a7 e8bd     +LDI R27 , HIGH ( 0x5B8D80 )
0000a8 e58b     +LDI R24 , BYTE3 ( 0x5B8D80 )
0000a9 e090     +LDI R25 , BYTE4 ( 0x5B8D80 )
                 	__GETD2N 0x5B8D80
0000aa 940e 03a8 	CALL __DIVD21U
0000ac 940e 0347 	CALL SUBOPT_0x1
                 ; 0000 003A             freq = freq / 6;
0000ae 91a0 0175 	LDS  R26,_freq
0000b0 91b0 0176 	LDS  R27,_freq+1
0000b2 9180 0177 	LDS  R24,_freq+2
0000b4 9190 0178 	LDS  R25,_freq+3
                +
0000b6 e0e6     +LDI R30 , LOW ( 0x6 )
0000b7 e0f0     +LDI R31 , HIGH ( 0x6 )
0000b8 e060     +LDI R22 , BYTE3 ( 0x6 )
0000b9 e070     +LDI R23 , BYTE4 ( 0x6 )
                 	__GETD1N 0x6
0000ba 940e 03cd 	CALL __DIVD21
0000bc 940e 0347 	CALL SUBOPT_0x1
                 ; 0000 003B             sprintf(frequency,"Frequency: %d Hz", (int)freq);
0000be e6e1      	LDI  R30,LOW(_frequency)
0000bf e0f1      	LDI  R31,HIGH(_frequency)
0000c0 93fa      	ST   -Y,R31
0000c1 93ea      	ST   -Y,R30
                +
0000c2 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000c3 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000c4 93fa      	ST   -Y,R31
0000c5 93ea      	ST   -Y,R30
0000c6 91e0 0175 	LDS  R30,_freq
0000c8 91f0 0176 	LDS  R31,_freq+1
0000ca 940e 03a3 	CALL __CWD1
0000cc 940e 03ed 	CALL __PUTPARD1
0000ce e084      	LDI  R24,4
0000cf 940e 02f1 	CALL _sprintf
0000d1 9628      	ADIW R28,8
                 ; 0000 003C 
                 ; 0000 003D             lcd_clear();
0000d2 d03d      	RCALL _lcd_clear
                 ; 0000 003E 			lcd_puts(frequency);
0000d3 e6a1      	LDI  R26,LOW(_frequency)
0000d4 e0b1      	LDI  R27,HIGH(_frequency)
0000d5 c002      	RJMP _0x13
                 ; 0000 003F 		}else lcd_puts("");
                 _0xF:
                +
0000d6 e6a0     +LDI R26 , LOW ( _0x11 + ( 0 ) )
0000d7 e0b1     +LDI R27 , HIGH ( _0x11 + ( 0 ) )
                 	__POINTW2MN _0x11,0
                 _0x13:
0000d8 d065      	RCALL _lcd_puts
                 ; 0000 0040 
                 ; 0000 0041         delay_ms(100);
0000d9 e6a4      	LDI  R26,LOW(100)
0000da e0b0      	LDI  R27,0
0000db 940e 0389 	CALL _delay_ms
                 ; 0000 0042 	}
0000dd cf97      	RJMP _0x3
                 ; 0000 0043 }
                 _0x12:
0000de cfff      	RJMP _0x12
                 ; .FEND
                 
                 	.DSEG
                 _0x11:
000160           	.BYTE 0x1
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000df 93aa      	ST   -Y,R26
0000e0 b3eb      	IN   R30,0x1B
0000e1 70ef      	ANDI R30,LOW(0xF)
0000e2 2fae      	MOV  R26,R30
0000e3 81e8      	LD   R30,Y
0000e4 7fe0      	ANDI R30,LOW(0xF0)
0000e5 2bea      	OR   R30,R26
0000e6 bbeb      	OUT  0x1B,R30
                +
0000e7 e08a     +LDI R24 , LOW ( 10 )
                +__DELAY_USB_LOOP :
0000e8 958a     +DEC R24
0000e9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 10
0000ea 9ada      	SBI  0x1B,2
                +
0000eb e08a     +LDI R24 , LOW ( 10 )
                +__DELAY_USB_LOOP :
0000ec 958a     +DEC R24
0000ed f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 10
0000ee 98da      	CBI  0x1B,2
                +
0000ef e08a     +LDI R24 , LOW ( 10 )
                +__DELAY_USB_LOOP :
0000f0 958a     +DEC R24
0000f1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 10
0000f2 c088      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000f3 93aa      	ST   -Y,R26
0000f4 81a8      	LD   R26,Y
0000f5 dfe9      	RCALL __lcd_write_nibble_G100
0000f6 81e8          ld    r30,y
0000f7 95e2          swap  r30
0000f8 83e8          st    y,r30
0000f9 81a8      	LD   R26,Y
0000fa dfe4      	RCALL __lcd_write_nibble_G100
                +
0000fb e684     +LDI R24 , LOW ( 100 )
                +__DELAY_USB_LOOP :
0000fc 958a     +DEC R24
0000fd f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 100
0000fe c07c      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000ff 93aa      	ST   -Y,R26
000100 81e8      	LD   R30,Y
000101 e0f0      	LDI  R31,0
000102 58e7      	SUBI R30,LOW(-__base_y_G100)
000103 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000104 81e0      	LD   R30,Z
000105 81a9      	LDD  R26,Y+1
000106 0fae      	ADD  R26,R30
000107 dfeb      	RCALL __lcd_write_data
000108 81e9      	LDD  R30,Y+1
000109 93e0 017d 	STS  __lcd_x,R30
00010b 81e8      	LD   R30,Y
00010c 93e0 017e 	STS  __lcd_y,R30
00010e 9622      	ADIW R28,2
00010f 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000110 e0a2      	LDI  R26,LOW(2)
000111 940e 0350 	CALL SUBOPT_0x2
000113 e0ac      	LDI  R26,LOW(12)
000114 dfde      	RCALL __lcd_write_data
000115 e0a1      	LDI  R26,LOW(1)
000116 940e 0350 	CALL SUBOPT_0x2
000118 e0e0      	LDI  R30,LOW(0)
000119 93e0 017e 	STS  __lcd_y,R30
00011b 93e0 017d 	STS  __lcd_x,R30
00011d 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00011e 93aa      	ST   -Y,R26
00011f 81a8      	LD   R26,Y
000120 30aa      	CPI  R26,LOW(0xA)
000121 f031      	BREQ _0x2000005
000122 91e0 017f 	LDS  R30,__lcd_maxx
000124 91a0 017d 	LDS  R26,__lcd_x
000126 17ae      	CP   R26,R30
000127 f060      	BRLO _0x2000004
                 _0x2000005:
000128 e0e0      	LDI  R30,LOW(0)
000129 93ea      	ST   -Y,R30
00012a 91a0 017e 	LDS  R26,__lcd_y
00012c 5faf      	SUBI R26,-LOW(1)
00012d 93a0 017e 	STS  __lcd_y,R26
00012f dfcf      	RCALL _lcd_gotoxy
000130 81a8      	LD   R26,Y
000131 30aa      	CPI  R26,LOW(0xA)
000132 f409      	BRNE _0x2000007
000133 c047      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
000134 91e0 017d 	LDS  R30,__lcd_x
000136 5fef      	SUBI R30,-LOW(1)
000137 93e0 017d 	STS  __lcd_x,R30
000139 9ad8      	SBI  0x1B,0
00013a 81a8      	LD   R26,Y
00013b dfb7      	RCALL __lcd_write_data
00013c 98d8      	CBI  0x1B,0
00013d c03d      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00013e 93ba      	ST   -Y,R27
00013f 93aa      	ST   -Y,R26
000140 931a      	ST   -Y,R17
                 _0x2000008:
000141 81a9      	LDD  R26,Y+1
000142 81ba      	LDD  R27,Y+1+1
000143 91ed      	LD   R30,X+
000144 83a9      	STD  Y+1,R26
000145 83ba      	STD  Y+1+1,R27
000146 2f1e      	MOV  R17,R30
000147 30e0      	CPI  R30,0
000148 f019      	BREQ _0x200000A
000149 2fa1      	MOV  R26,R17
00014a dfd3      	RCALL _lcd_putchar
00014b cff5      	RJMP _0x2000008
                 _0x200000A:
00014c 8118      	LDD  R17,Y+0
00014d 9623      	ADIW R28,3
00014e 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00014f 93aa      	ST   -Y,R26
000150 b3ea      	IN   R30,0x1A
000151 6fe0      	ORI  R30,LOW(0xF0)
000152 bbea      	OUT  0x1A,R30
000153 9ad2      	SBI  0x1A,2
000154 9ad0      	SBI  0x1A,0
000155 9ad1      	SBI  0x1A,1
000156 98da      	CBI  0x1B,2
000157 98d8      	CBI  0x1B,0
000158 98d9      	CBI  0x1B,1
000159 81e8      	LD   R30,Y
00015a 93e0 017f 	STS  __lcd_maxx,R30
00015c 58e0      	SUBI R30,-LOW(128)
                +
00015d 93e0 017b+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00015f 81e8      	LD   R30,Y
000160 54e0      	SUBI R30,-LOW(192)
                +
000161 93e0 017c+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000163 e1a4      	LDI  R26,LOW(20)
000164 e0b0      	LDI  R27,0
000165 940e 0389 	CALL _delay_ms
000167 940e 0356 	CALL SUBOPT_0x3
000169 940e 0356 	CALL SUBOPT_0x3
00016b 940e 0356 	CALL SUBOPT_0x3
00016d e2a0      	LDI  R26,LOW(32)
00016e df70      	RCALL __lcd_write_nibble_G100
                +
00016f ec88     +LDI R24 , LOW ( 200 )
                +__DELAY_USB_LOOP :
000170 958a     +DEC R24
000171 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 200
000172 e2a8      	LDI  R26,LOW(40)
000173 df7f      	RCALL __lcd_write_data
000174 e0a4      	LDI  R26,LOW(4)
000175 df7d      	RCALL __lcd_write_data
000176 e8a5      	LDI  R26,LOW(133)
000177 df7b      	RCALL __lcd_write_data
000178 e0a6      	LDI  R26,LOW(6)
000179 df79      	RCALL __lcd_write_data
00017a df95      	RCALL _lcd_clear
                 _0x2080002:
00017b 9621      	ADIW R28,1
00017c 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
00017d 93ba      	ST   -Y,R27
00017e 93aa      	ST   -Y,R26
00017f 931a      	ST   -Y,R17
000180 930a      	ST   -Y,R16
000181 81aa      	LDD  R26,Y+2
000182 81bb      	LDD  R27,Y+2+1
000183 9612      	ADIW R26,2
000184 940e 03e5 	CALL __GETW1P
000186 9730      	SBIW R30,0
000187 f159      	BREQ _0x2020010
000188 81aa      	LDD  R26,Y+2
000189 81bb      	LDD  R27,Y+2+1
00018a 9614      	ADIW R26,4
00018b 940e 03e5 	CALL __GETW1P
00018d 018f      	MOVW R16,R30
00018e 9730      	SBIW R30,0
00018f f061      	BREQ _0x2020012
                +
000190 3002     +CPI R16 , LOW ( 2 )
000191 e0e0     +LDI R30 , HIGH ( 2 )
000192 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000193 f098      	BRLO _0x2020013
000194 01f8      	MOVW R30,R16
000195 9731      	SBIW R30,1
000196 018f      	MOVW R16,R30
                +
000197 81aa     +LDD R26 , Y + 2
000198 81bb     +LDD R27 , Y + 2 + 1
000199 9614     +ADIW R26 , 4
00019a 93ed     +ST X + , R30
00019b 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00019c 81aa      	LDD  R26,Y+2
00019d 81bb      	LDD  R27,Y+2+1
00019e 9612      	ADIW R26,2
00019f 91ed      	LD   R30,X+
0001a0 91fd      	LD   R31,X+
0001a1 9631      	ADIW R30,1
0001a2 93fe      	ST   -X,R31
0001a3 93ee      	ST   -X,R30
0001a4 9731      	SBIW R30,1
0001a5 81ac      	LDD  R26,Y+4
0001a6 83a0      	STD  Z+0,R26
                 _0x2020013:
0001a7 81aa      	LDD  R26,Y+2
0001a8 81bb      	LDD  R27,Y+2+1
0001a9 940e 03e5 	CALL __GETW1P
0001ab 23ff      	TST  R31
0001ac f02a      	BRMI _0x2020014
0001ad 91ed      	LD   R30,X+
0001ae 91fd      	LD   R31,X+
0001af 9631      	ADIW R30,1
0001b0 93fe      	ST   -X,R31
0001b1 93ee      	ST   -X,R30
                 _0x2020014:
0001b2 c006      	RJMP _0x2020015
                 _0x2020010:
0001b3 81aa      	LDD  R26,Y+2
0001b4 81bb      	LDD  R27,Y+2+1
0001b5 efef      	LDI  R30,LOW(65535)
0001b6 efff      	LDI  R31,HIGH(65535)
0001b7 93ed      	ST   X+,R30
0001b8 93fc      	ST   X,R31
                 _0x2020015:
0001b9 8119      	LDD  R17,Y+1
0001ba 8108      	LDD  R16,Y+0
0001bb 9625      	ADIW R28,5
0001bc 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001bd 93ba      	ST   -Y,R27
0001be 93aa      	ST   -Y,R26
0001bf 9726      	SBIW R28,6
0001c0 940e 03f2 	CALL __SAVELOCR6
0001c2 e010      	LDI  R17,0
0001c3 85ac      	LDD  R26,Y+12
0001c4 85bd      	LDD  R27,Y+12+1
0001c5 e0e0      	LDI  R30,LOW(0)
0001c6 e0f0      	LDI  R31,HIGH(0)
0001c7 93ed      	ST   X+,R30
0001c8 93fc      	ST   X,R31
                 _0x2020016:
0001c9 89ea      	LDD  R30,Y+18
0001ca 89fb      	LDD  R31,Y+18+1
0001cb 9631      	ADIW R30,1
0001cc 8bea      	STD  Y+18,R30
0001cd 8bfb      	STD  Y+18+1,R31
0001ce 9731      	SBIW R30,1
0001cf 91e4      	LPM  R30,Z
0001d0 2f2e      	MOV  R18,R30
0001d1 30e0      	CPI  R30,0
0001d2 f409      	BRNE PC+2
0001d3 c115      	RJMP _0x2020018
0001d4 2fe1      	MOV  R30,R17
0001d5 30e0      	CPI  R30,0
0001d6 f439      	BRNE _0x202001C
0001d7 3225      	CPI  R18,37
0001d8 f411      	BRNE _0x202001D
0001d9 e011      	LDI  R17,LOW(1)
0001da c002      	RJMP _0x202001E
                 _0x202001D:
0001db 940e 035d 	CALL SUBOPT_0x4
                 _0x202001E:
0001dd c10a      	RJMP _0x202001B
                 _0x202001C:
0001de 30e1      	CPI  R30,LOW(0x1)
0001df f4a9      	BRNE _0x202001F
0001e0 3225      	CPI  R18,37
0001e1 f419      	BRNE _0x2020020
0001e2 940e 035d 	CALL SUBOPT_0x4
0001e4 c102      	RJMP _0x20200CC
                 _0x2020020:
0001e5 e012      	LDI  R17,LOW(2)
0001e6 e040      	LDI  R20,LOW(0)
0001e7 e000      	LDI  R16,LOW(0)
0001e8 322d      	CPI  R18,45
0001e9 f411      	BRNE _0x2020021
0001ea e001      	LDI  R16,LOW(1)
0001eb c0fc      	RJMP _0x202001B
                 _0x2020021:
0001ec 322b      	CPI  R18,43
0001ed f411      	BRNE _0x2020022
0001ee e24b      	LDI  R20,LOW(43)
0001ef c0f8      	RJMP _0x202001B
                 _0x2020022:
0001f0 3220      	CPI  R18,32
0001f1 f411      	BRNE _0x2020023
0001f2 e240      	LDI  R20,LOW(32)
0001f3 c0f4      	RJMP _0x202001B
                 _0x2020023:
0001f4 c002      	RJMP _0x2020024
                 _0x202001F:
0001f5 30e2      	CPI  R30,LOW(0x2)
0001f6 f439      	BRNE _0x2020025
                 _0x2020024:
0001f7 e050      	LDI  R21,LOW(0)
0001f8 e013      	LDI  R17,LOW(3)
0001f9 3320      	CPI  R18,48
0001fa f411      	BRNE _0x2020026
0001fb 6800      	ORI  R16,LOW(128)
0001fc c0eb      	RJMP _0x202001B
                 _0x2020026:
0001fd c003      	RJMP _0x2020027
                 _0x2020025:
0001fe 30e3      	CPI  R30,LOW(0x3)
0001ff f009      	BREQ PC+2
000200 c0e7      	RJMP _0x202001B
                 _0x2020027:
000201 3320      	CPI  R18,48
000202 f010      	BRLO _0x202002A
000203 332a      	CPI  R18,58
000204 f008      	BRLO _0x202002B
                 _0x202002A:
000205 c007      	RJMP _0x2020029
                 _0x202002B:
000206 e0aa      	LDI  R26,LOW(10)
000207 9f5a      	MUL  R21,R26
000208 2d50      	MOV  R21,R0
000209 2fe2      	MOV  R30,R18
00020a 53e0      	SUBI R30,LOW(48)
00020b 0f5e      	ADD  R21,R30
00020c c0db      	RJMP _0x202001B
                 _0x2020029:
00020d 2fe2      	MOV  R30,R18
00020e 36e3      	CPI  R30,LOW(0x63)
00020f f449      	BRNE _0x202002F
000210 940e 0364 	CALL SUBOPT_0x5
000212 89e8      	LDD  R30,Y+16
000213 89f9      	LDD  R31,Y+16+1
000214 81a4      	LDD  R26,Z+4
000215 93aa      	ST   -Y,R26
000216 940e 036a 	CALL SUBOPT_0x6
000218 c0ce      	RJMP _0x2020030
                 _0x202002F:
000219 37e3      	CPI  R30,LOW(0x73)
00021a f441      	BRNE _0x2020032
00021b 940e 0364 	CALL SUBOPT_0x5
00021d 940e 0370 	CALL SUBOPT_0x7
00021f 940e 0325 	CALL _strlen
000221 2f1e      	MOV  R17,R30
000222 c00a      	RJMP _0x2020033
                 _0x2020032:
000223 37e0      	CPI  R30,LOW(0x70)
000224 f461      	BRNE _0x2020035
000225 940e 0364 	CALL SUBOPT_0x5
000227 940e 0370 	CALL SUBOPT_0x7
000229 940e 0331 	CALL _strlenf
00022b 2f1e      	MOV  R17,R30
00022c 6008      	ORI  R16,LOW(8)
                 _0x2020033:
00022d 6002      	ORI  R16,LOW(2)
00022e 770f      	ANDI R16,LOW(127)
00022f e030      	LDI  R19,LOW(0)
000230 c034      	RJMP _0x2020036
                 _0x2020035:
000231 36e4      	CPI  R30,LOW(0x64)
000232 f011      	BREQ _0x2020039
000233 36e9      	CPI  R30,LOW(0x69)
000234 f411      	BRNE _0x202003A
                 _0x2020039:
000235 6004      	ORI  R16,LOW(4)
000236 c002      	RJMP _0x202003B
                 _0x202003A:
000237 37e5      	CPI  R30,LOW(0x75)
000238 f431      	BRNE _0x202003C
                 _0x202003B:
000239 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
00023a e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
00023b 83ee      	STD  Y+6,R30
00023c 83ff      	STD  Y+6+1,R31
00023d e015      	LDI  R17,LOW(5)
00023e c00c      	RJMP _0x202003D
                 _0x202003C:
00023f 35e8      	CPI  R30,LOW(0x58)
000240 f411      	BRNE _0x202003F
000241 6008      	ORI  R16,LOW(8)
000242 c003      	RJMP _0x2020040
                 _0x202003F:
000243 37e8      	CPI  R30,LOW(0x78)
000244 f009      	BREQ PC+2
000245 c0a1      	RJMP _0x2020071
                 _0x2020040:
000246 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000247 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000248 83ee      	STD  Y+6,R30
000249 83ff      	STD  Y+6+1,R31
00024a e014      	LDI  R17,LOW(4)
                 _0x202003D:
00024b ff02      	SBRS R16,2
00024c c014      	RJMP _0x2020042
00024d 940e 0364 	CALL SUBOPT_0x5
00024f 940e 037a 	CALL SUBOPT_0x8
000251 85ab      	LDD  R26,Y+11
000252 23aa      	TST  R26
000253 f43a      	BRPL _0x2020043
000254 85ea      	LDD  R30,Y+10
000255 85fb      	LDD  R31,Y+10+1
000256 940e 0397 	CALL __ANEGW1
000258 87ea      	STD  Y+10,R30
000259 87fb      	STD  Y+10+1,R31
00025a e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00025b 3040      	CPI  R20,0
00025c f011      	BREQ _0x2020044
00025d 5f1f      	SUBI R17,-LOW(1)
00025e c001      	RJMP _0x2020045
                 _0x2020044:
00025f 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000260 c004      	RJMP _0x2020046
                 _0x2020042:
000261 940e 0364 	CALL SUBOPT_0x5
000263 940e 037a 	CALL SUBOPT_0x8
                 _0x2020046:
                 _0x2020036:
000265 fd00      	SBRC R16,0
000266 c011      	RJMP _0x2020047
                 _0x2020048:
000267 1715      	CP   R17,R21
000268 f478      	BRSH _0x202004A
000269 ff07      	SBRS R16,7
00026a c008      	RJMP _0x202004B
00026b ff02      	SBRS R16,2
00026c c004      	RJMP _0x202004C
00026d 7f0b      	ANDI R16,LOW(251)
00026e 2f24      	MOV  R18,R20
00026f 5011      	SUBI R17,LOW(1)
000270 c001      	RJMP _0x202004D
                 _0x202004C:
000271 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000272 c001      	RJMP _0x202004E
                 _0x202004B:
000273 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000274 940e 035d 	CALL SUBOPT_0x4
000276 5051      	SUBI R21,LOW(1)
000277 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000278 2f31      	MOV  R19,R17
000279 ff01      	SBRS R16,1
00027a c017      	RJMP _0x202004F
                 _0x2020050:
00027b 3030      	CPI  R19,0
00027c f0a1      	BREQ _0x2020052
00027d ff03      	SBRS R16,3
00027e c006      	RJMP _0x2020053
00027f 81ee      	LDD  R30,Y+6
000280 81ff      	LDD  R31,Y+6+1
000281 9125      	LPM  R18,Z+
000282 83ee      	STD  Y+6,R30
000283 83ff      	STD  Y+6+1,R31
000284 c005      	RJMP _0x2020054
                 _0x2020053:
000285 81ae      	LDD  R26,Y+6
000286 81bf      	LDD  R27,Y+6+1
000287 912d      	LD   R18,X+
000288 83ae      	STD  Y+6,R26
000289 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00028a 940e 035d 	CALL SUBOPT_0x4
00028c 3050      	CPI  R21,0
00028d f009      	BREQ _0x2020055
00028e 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00028f 5031      	SUBI R19,LOW(1)
000290 cfea      	RJMP _0x2020050
                 _0x2020052:
000291 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000292 e320      	LDI  R18,LOW(48)
000293 81ee      	LDD  R30,Y+6
000294 81ff      	LDD  R31,Y+6+1
000295 940e 03e9 	CALL __GETW1PF
000297 87e8      	STD  Y+8,R30
000298 87f9      	STD  Y+8+1,R31
000299 81ee      	LDD  R30,Y+6
00029a 81ff      	LDD  R31,Y+6+1
00029b 9632      	ADIW R30,2
00029c 83ee      	STD  Y+6,R30
00029d 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00029e 85e8      	LDD  R30,Y+8
00029f 85f9      	LDD  R31,Y+8+1
0002a0 85aa      	LDD  R26,Y+10
0002a1 85bb      	LDD  R27,Y+10+1
0002a2 17ae      	CP   R26,R30
0002a3 07bf      	CPC  R27,R31
0002a4 f050      	BRLO _0x202005C
0002a5 5f2f      	SUBI R18,-LOW(1)
0002a6 85a8      	LDD  R26,Y+8
0002a7 85b9      	LDD  R27,Y+8+1
0002a8 85ea      	LDD  R30,Y+10
0002a9 85fb      	LDD  R31,Y+10+1
0002aa 1bea      	SUB  R30,R26
0002ab 0bfb      	SBC  R31,R27
0002ac 87ea      	STD  Y+10,R30
0002ad 87fb      	STD  Y+10+1,R31
0002ae cfef      	RJMP _0x202005A
                 _0x202005C:
0002af 332a      	CPI  R18,58
0002b0 f028      	BRLO _0x202005D
0002b1 ff03      	SBRS R16,3
0002b2 c002      	RJMP _0x202005E
0002b3 5f29      	SUBI R18,-LOW(7)
0002b4 c001      	RJMP _0x202005F
                 _0x202005E:
0002b5 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002b6 fd04      	SBRC R16,4
0002b7 c01a      	RJMP _0x2020061
0002b8 3321      	CPI  R18,49
0002b9 f420      	BRSH _0x2020063
0002ba 85a8      	LDD  R26,Y+8
0002bb 85b9      	LDD  R27,Y+8+1
0002bc 9711      	SBIW R26,1
0002bd f409      	BRNE _0x2020062
                 _0x2020063:
0002be c009      	RJMP _0x20200CD
                 _0x2020062:
0002bf 1753      	CP   R21,R19
0002c0 f010      	BRLO _0x2020067
0002c1 ff00      	SBRS R16,0
0002c2 c001      	RJMP _0x2020068
                 _0x2020067:
0002c3 c013      	RJMP _0x2020066
                 _0x2020068:
0002c4 e220      	LDI  R18,LOW(32)
0002c5 ff07      	SBRS R16,7
0002c6 c00b      	RJMP _0x2020069
0002c7 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0002c8 6100      	ORI  R16,LOW(16)
0002c9 ff02      	SBRS R16,2
0002ca c007      	RJMP _0x202006A
0002cb 7f0b      	ANDI R16,LOW(251)
0002cc 934a      	ST   -Y,R20
0002cd 940e 036a 	CALL SUBOPT_0x6
0002cf 3050      	CPI  R21,0
0002d0 f009      	BREQ _0x202006B
0002d1 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002d2 940e 035d 	CALL SUBOPT_0x4
0002d4 3050      	CPI  R21,0
0002d5 f009      	BREQ _0x202006C
0002d6 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002d7 5031      	SUBI R19,LOW(1)
0002d8 85a8      	LDD  R26,Y+8
0002d9 85b9      	LDD  R27,Y+8+1
0002da 9712      	SBIW R26,2
0002db f008      	BRLO _0x2020059
0002dc cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002dd ff00      	SBRS R16,0
0002de c008      	RJMP _0x202006D
                 _0x202006E:
0002df 3050      	CPI  R21,0
0002e0 f031      	BREQ _0x2020070
0002e1 5051      	SUBI R21,LOW(1)
0002e2 e2e0      	LDI  R30,LOW(32)
0002e3 93ea      	ST   -Y,R30
0002e4 940e 036a 	CALL SUBOPT_0x6
0002e6 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002e7 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002e8 cee0      	RJMP _0x2020016
                 _0x2020018:
0002e9 85ac      	LDD  R26,Y+12
0002ea 85bd      	LDD  R27,Y+12+1
0002eb 940e 03e5 	CALL __GETW1P
0002ed 940e 03f9 	CALL __LOADLOCR6
0002ef 9664      	ADIW R28,20
0002f0 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002f1 92ff      	PUSH R15
0002f2 2ef8      	MOV  R15,R24
0002f3 9726      	SBIW R28,6
0002f4 940e 03f4 	CALL __SAVELOCR4
0002f6 940e 0382 	CALL SUBOPT_0x9
0002f8 9730      	SBIW R30,0
0002f9 f419      	BRNE _0x2020072
0002fa efef      	LDI  R30,LOW(65535)
0002fb efff      	LDI  R31,HIGH(65535)
0002fc c023      	RJMP _0x2080001
                 _0x2020072:
0002fd 01de      	MOVW R26,R28
0002fe 9616      	ADIW R26,6
0002ff 940e 0393 	CALL __ADDW2R15
000301 018d      	MOVW R16,R26
000302 940e 0382 	CALL SUBOPT_0x9
000304 83ee      	STD  Y+6,R30
000305 83ff      	STD  Y+6+1,R31
000306 e0e0      	LDI  R30,LOW(0)
000307 87e8      	STD  Y+8,R30
000308 87e9      	STD  Y+8+1,R30
000309 01de      	MOVW R26,R28
00030a 961a      	ADIW R26,10
00030b 940e 0393 	CALL __ADDW2R15
00030d 940e 03e5 	CALL __GETW1P
00030f 93fa      	ST   -Y,R31
000310 93ea      	ST   -Y,R30
000311 931a      	ST   -Y,R17
000312 930a      	ST   -Y,R16
000313 e7ed      	LDI  R30,LOW(_put_buff_G101)
000314 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000315 93fa      	ST   -Y,R31
000316 93ea      	ST   -Y,R30
000317 01de      	MOVW R26,R28
000318 961a      	ADIW R26,10
000319 dea3      	RCALL __print_G101
00031a 019f      	MOVW R18,R30
00031b 81ae      	LDD  R26,Y+6
00031c 81bf      	LDD  R27,Y+6+1
00031d e0e0      	LDI  R30,LOW(0)
00031e 93ec      	ST   X,R30
00031f 01f9      	MOVW R30,R18
                 _0x2080001:
000320 940e 03fb 	CALL __LOADLOCR4
000322 962a      	ADIW R28,10
000323 90ff      	POP  R15
000324 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000325 93ba      	ST   -Y,R27
000326 93aa      	ST   -Y,R26
000327 91a9          ld   r26,y+
000328 91b9          ld   r27,y+
000329 27ee          clr  r30
00032a 27ff          clr  r31
                 strlen0:
00032b 916d          ld   r22,x+
00032c 2366          tst  r22
00032d f011          breq strlen1
00032e 9631          adiw r30,1
00032f cffb          rjmp strlen0
                 strlen1:
000330 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000331 93ba      	ST   -Y,R27
000332 93aa      	ST   -Y,R26
000333 27aa          clr  r26
000334 27bb          clr  r27
000335 91e9          ld   r30,y+
000336 91f9          ld   r31,y+
                 strlenf0:
000337 9005      	lpm  r0,z+
000338 2000          tst  r0
000339 f011          breq strlenf1
00033a 9611          adiw r26,1
00033b cffb          rjmp strlenf0
                 strlenf1:
00033c 01fd          movw r30,r26
00033d 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _frequency:
000161           	.BYTE 0x14
                 _freq:
000175           	.BYTE 0x4
                 __base_y_G100:
000179           	.BYTE 0x4
                 __lcd_x:
00017d           	.BYTE 0x1
                 __lcd_y:
00017e           	.BYTE 0x1
                 __lcd_maxx:
00017f           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
00033e b5e7      	IN   R30,0x27
00033f 2ffe      	MOV  R31,R30
000340 e0e0      	LDI  R30,0
000341 01df      	MOVW R26,R30
000342 b5e6      	IN   R30,0x26
000343 e0f0      	LDI  R31,0
000344 0fea      	ADD  R30,R26
000345 1ffb      	ADC  R31,R27
000346 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000347 93e0 0175 	STS  _freq,R30
000349 93f0 0176 	STS  _freq+1,R31
00034b 9360 0177 	STS  _freq+2,R22
00034d 9370 0178 	STS  _freq+3,R23
00034f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000350 940e 00f3 	CALL __lcd_write_data
000352 e0a3      	LDI  R26,LOW(3)
000353 e0b0      	LDI  R27,0
000354 940c 0389 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
000356 e3a0      	LDI  R26,LOW(48)
000357 940e 00df 	CALL __lcd_write_nibble_G100
                +
000359 ec88     +LDI R24 , LOW ( 200 )
                +__DELAY_USB_LOOP :
00035a 958a     +DEC R24
00035b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 200
00035c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4:
00035d 932a      	ST   -Y,R18
00035e 85ad      	LDD  R26,Y+13
00035f 85be      	LDD  R27,Y+13+1
000360 85ef      	LDD  R30,Y+15
000361 89f8      	LDD  R31,Y+15+1
000362 9509      	ICALL
000363 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
000364 89e8      	LDD  R30,Y+16
000365 89f9      	LDD  R31,Y+16+1
000366 9734      	SBIW R30,4
000367 8be8      	STD  Y+16,R30
000368 8bf9      	STD  Y+16+1,R31
000369 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
00036a 85ad      	LDD  R26,Y+13
00036b 85be      	LDD  R27,Y+13+1
00036c 85ef      	LDD  R30,Y+15
00036d 89f8      	LDD  R31,Y+15+1
00036e 9509      	ICALL
00036f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
000370 89a8      	LDD  R26,Y+16
000371 89b9      	LDD  R27,Y+16+1
000372 9614      	ADIW R26,4
000373 940e 03e5 	CALL __GETW1P
000375 83ee      	STD  Y+6,R30
000376 83ff      	STD  Y+6+1,R31
000377 81ae      	LDD  R26,Y+6
000378 81bf      	LDD  R27,Y+6+1
000379 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
00037a 89a8      	LDD  R26,Y+16
00037b 89b9      	LDD  R27,Y+16+1
00037c 9614      	ADIW R26,4
00037d 940e 03e5 	CALL __GETW1P
00037f 87ea      	STD  Y+10,R30
000380 87fb      	STD  Y+10+1,R31
000381 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000382 01de      	MOVW R26,R28
000383 961c      	ADIW R26,12
000384 940e 0393 	CALL __ADDW2R15
000386 940e 03e5 	CALL __GETW1P
000388 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000389 9610      	adiw r26,0
00038a f039      	breq __delay_ms1
                 __delay_ms0:
                +
00038b ed8c     +LDI R24 , LOW ( 0x5DC )
00038c e095     +LDI R25 , HIGH ( 0x5DC )
                +__DELAY_USW_LOOP :
00038d 9701     +SBIW R24 , 1
00038e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x5DC
00038f 95a8      	wdr
000390 9711      	sbiw r26,1
000391 f7c9      	brne __delay_ms0
                 __delay_ms1:
000392 9508      	ret
                 
                 __ADDW2R15:
000393 2400      	CLR  R0
000394 0daf      	ADD  R26,R15
000395 1db0      	ADC  R27,R0
000396 9508      	RET
                 
                 __ANEGW1:
000397 95f1      	NEG  R31
000398 95e1      	NEG  R30
000399 40f0      	SBCI R31,0
00039a 9508      	RET
                 
                 __ANEGD1:
00039b 95f0      	COM  R31
00039c 9560      	COM  R22
00039d 9570      	COM  R23
00039e 95e1      	NEG  R30
00039f 4fff      	SBCI R31,-1
0003a0 4f6f      	SBCI R22,-1
0003a1 4f7f      	SBCI R23,-1
0003a2 9508      	RET
                 
                 __CWD1:
0003a3 2f6f      	MOV  R22,R31
0003a4 0f66      	ADD  R22,R22
0003a5 0b66      	SBC  R22,R22
0003a6 2f76      	MOV  R23,R22
0003a7 9508      	RET
                 
                 __DIVD21U:
0003a8 933f      	PUSH R19
0003a9 934f      	PUSH R20
0003aa 935f      	PUSH R21
0003ab 2400      	CLR  R0
0003ac 2411      	CLR  R1
0003ad 2744      	CLR  R20
0003ae 2755      	CLR  R21
0003af e230      	LDI  R19,32
                 __DIVD21U1:
0003b0 0faa      	LSL  R26
0003b1 1fbb      	ROL  R27
0003b2 1f88      	ROL  R24
0003b3 1f99      	ROL  R25
0003b4 1c00      	ROL  R0
0003b5 1c11      	ROL  R1
0003b6 1f44      	ROL  R20
0003b7 1f55      	ROL  R21
0003b8 1a0e      	SUB  R0,R30
0003b9 0a1f      	SBC  R1,R31
0003ba 0b46      	SBC  R20,R22
0003bb 0b57      	SBC  R21,R23
0003bc f428      	BRCC __DIVD21U2
0003bd 0e0e      	ADD  R0,R30
0003be 1e1f      	ADC  R1,R31
0003bf 1f46      	ADC  R20,R22
0003c0 1f57      	ADC  R21,R23
0003c1 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0003c2 60a1      	SBR  R26,1
                 __DIVD21U3:
0003c3 953a      	DEC  R19
0003c4 f759      	BRNE __DIVD21U1
0003c5 01fd      	MOVW R30,R26
0003c6 01bc      	MOVW R22,R24
0003c7 01d0      	MOVW R26,R0
0003c8 01ca      	MOVW R24,R20
0003c9 915f      	POP  R21
0003ca 914f      	POP  R20
0003cb 913f      	POP  R19
0003cc 9508      	RET
                 
                 __DIVD21:
0003cd d004      	RCALL __CHKSIGND
0003ce dfd9      	RCALL __DIVD21U
0003cf f40e      	BRTC __DIVD211
0003d0 dfca      	RCALL __ANEGD1
                 __DIVD211:
0003d1 9508      	RET
                 
                 __CHKSIGND:
0003d2 94e8      	CLT
0003d3 ff77      	SBRS R23,7
0003d4 c002      	RJMP __CHKSD1
0003d5 dfc5      	RCALL __ANEGD1
0003d6 9468      	SET
                 __CHKSD1:
0003d7 ff97      	SBRS R25,7
0003d8 c00b      	RJMP __CHKSD2
0003d9 2400      	CLR  R0
0003da 95a0      	COM  R26
0003db 95b0      	COM  R27
0003dc 9580      	COM  R24
0003dd 9590      	COM  R25
0003de 9611      	ADIW R26,1
0003df 1d80      	ADC  R24,R0
0003e0 1d90      	ADC  R25,R0
0003e1 f800      	BLD  R0,0
0003e2 9403      	INC  R0
0003e3 fa00      	BST  R0,0
                 __CHKSD2:
0003e4 9508      	RET
                 
                 __GETW1P:
0003e5 91ed      	LD   R30,X+
0003e6 91fc      	LD   R31,X
0003e7 9711      	SBIW R26,1
0003e8 9508      	RET
                 
                 __GETW1PF:
0003e9 9005      	LPM  R0,Z+
0003ea 91f4      	LPM  R31,Z
0003eb 2de0      	MOV  R30,R0
0003ec 9508      	RET
                 
                 __PUTPARD1:
0003ed 937a      	ST   -Y,R23
0003ee 936a      	ST   -Y,R22
0003ef 93fa      	ST   -Y,R31
0003f0 93ea      	ST   -Y,R30
0003f1 9508      	RET
                 
                 __SAVELOCR6:
0003f2 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003f3 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003f4 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003f5 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003f6 931a      	ST   -Y,R17
0003f7 930a      	ST   -Y,R16
0003f8 9508      	RET
                 
                 __LOADLOCR6:
0003f9 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003fa 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003fb 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003fc 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003fd 8119      	LDD  R17,Y+1
0003fe 8108      	LD   R16,Y
0003ff 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  22 r1 :   5 r2 :   0 r3 :   0 r4 :   3 r5 :   2 r6 :   2 r7 :   0 
r8 :   2 r9 :   1 r10:   1 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:  12 r20:  16 r21:  23 r22:  19 r23:  10 
r24:  30 r25:   9 r26: 112 r27:  44 r28:  14 r29:   1 r30: 201 r31:  71 
x  :  23 y  : 164 z  :  15 
Registers used: 28 out of 35 (80.0%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   7 add   :   6 
adiw  :  25 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  31 brpl  :   1 brsh  :   3 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :  57 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  14 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   7 
cp    :   5 cpc   :   3 cpi   :  33 cpse  :   0 dec   :   8 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   7 inc   :   1 jmp   :  23 ld    :  26 ldd   :  75 ldi   : 108 
lds   :  10 lpm   :  14 lsl   :   1 lsr   :   0 mov   :  17 movw  :  24 
mul   :   1 muls  :   0 mulsu :   0 neg   :   3 nop   :   0 or    :   1 
ori   :   7 out   :  20 pop   :   4 push  :   4 rcall :  21 ret   :  31 
reti  :   0 rjmp  :  66 rol   :   7 ror   :   0 sbc   :   6 sbci  :   5 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  17 sbr   :   1 sbrc  :   2 
sbrs  :  15 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  58 std   :  31 sts   :  13 sub   :   3 subi  :  18 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 63 out of 116 (54.3%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000800   1996     52   2048   16384  12.5%
[.dseg] 0x000060 0x000180      0     32     32    1024   3.1%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 11 warnings
